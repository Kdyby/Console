language: php

sudo: false

cache:
    directories:
        - $HOME/.composer/cache

php:
  - 7.1
  - 7.2
  - 7.3

env:
  matrix:
    - SYMFONY=4.* # dev
    - SYMFONY=3.* # dev
    - SYMFONY=2.* # dev
    - SYMFONY=4.* COMPOSER_EXTRA_ARGS="--prefer-stable"
    - SYMFONY=3.* COMPOSER_EXTRA_ARGS="--prefer-stable"
    - SYMFONY=2.* COMPOSER_EXTRA_ARGS="--prefer-stable"
    - SYMFONY=4.* COMPOSER_EXTRA_ARGS="--prefer-lowest --prefer-stable"
    - SYMFONY=3.* COMPOSER_EXTRA_ARGS="--prefer-lowest --prefer-stable"
    - SYMFONY=2.* COMPOSER_EXTRA_ARGS="--prefer-lowest --prefer-stable"

matrix:
  fast_finish: true
  include:
    - php: 7.2
      env: SYMFONY=4.* COMPOSER_EXTRA_ARGS="--prefer-stable" COVERAGE="--coverage ./coverage.xml --coverage-src ./src" TESTER_RUNTIME="phpdbg"
    - php: 7.2
      env: SYMFONY=4.* COMPOSER_EXTRA_ARGS="--prefer-stable" PHPSTAN=1
    - php: 7.2
      env: SYMFONY=4.* COMPOSER_EXTRA_ARGS="--prefer-stable" CODING_STANDARD=1
  exclude:
    - php: 7.2
      env: SYMFONY=4.* COMPOSER_EXTRA_ARGS="--prefer-stable"
  allow_failures:
    - env: SYMFONY=4.*
    - env: SYMFONY=3.*
    - env: SYMFONY=2.*

before_install:
  - if [[ $SYMFONY = '2.*' ]]; then composer require --no-update symfony/console:^2.8; fi
  - if [[ $SYMFONY = '3.*' ]]; then composer require --no-update symfony/console:^3.0; fi
  - if [[ $SYMFONY = '4.*' ]]; then composer require --no-update symfony/console:^4.0; fi

install:
  - if [ "$CODING_STANDARD" = "1" ]; then composer require --dev --no-update kdyby/coding-standard:^1.0@dev; fi
  - if [ "$PHPSTAN" = "1" ]; then composer require --dev --no-update phpstan/phpstan-shim:^0.7; fi
  - travis_retry composer update --no-interaction --no-suggest --no-progress --prefer-dist $COMPOSER_EXTRA_ARGS
  - travis_retry composer create-project --no-interaction jakub-onderka/php-parallel-lint /tmp/php-parallel-lint
  - if [ "$COVERAGE" != "" ]; then travis_retry wget -O /tmp/coveralls.phar https://github.com/satooshi/php-coveralls/releases/download/v1.0.1/coveralls.phar; fi

script:
  - vendor/bin/tester $COVERAGE -s -p ${TESTER_RUNTIME:-php} -c ./tests/php.ini-unix ./tests/KdybyTests/
  - php /tmp/php-parallel-lint/parallel-lint.php -e php,phpt --exclude vendor .
  - if [ "$PHPSTAN" = "1" ]; then php vendor/phpstan/phpstan-shim/phpstan.phar analyse --ansi --no-progress -l7 -c phpstan.neon src tests/KdybyTests; fi
  - if [ "$CODING_STANDARD" = "1" ]; then php vendor/bin/phpcs --standard=ruleset.xml --encoding=utf-8 -sp src tests; fi

after_script:
  - if [ "$COVERAGE" != "" ]; then php /tmp/coveralls.phar --verbose --config tests/.coveralls.yml || true; fi

after_failure:
  - 'for i in $(find ./tests -name \*.actual); do echo "--- $i"; cat $i; echo; echo; done'
